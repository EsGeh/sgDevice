#N canvas 800 221 798 189 10;
#X obj 484 160 loadbang;
#X obj 484 206 s \$0-GLOBAL;
#X msg 484 183 list init 0;
#N canvas 0 407 844 345 device 0;
#X text 102 100 device ver.;
#X floatatom 105 117 5 1 2 0 - - - 0;
#X obj 88 312 outlet;
#X msg 112 212 list set 3 version 1 \$1;
#X obj 97 41 inlet;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X coords 0 -1 1 1 74 36 2 100 100;
#X restore 485 85 pd device version;
#X obj 485 126 s sgDevice;
#X obj 554 124 s sgDev_raw;
#X obj 485 63 r dev_version;
#N canvas 0 0 942 854 simple 0;
#X text 11 8 simple "sgDevice" obj sending ctrl events;
#N canvas 0 0 798 854 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 20 54 pd;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 18 144 pd;
#X text 5 95 same for (computer) keyboard...;
#X obj 18 122 sdKeyboard_obj Keyb_raw \$0-GLOBAL;
#X obj 20 31 sgDevice_obj sgDev_raw \$0-GLOBAL 1;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 19 228 pd;
#X text 5 182 same for piano keybord...;
#X text 432 32 sends events of type "analog" \, "trigger" \, "switch"
and "meta", f 31;
#X text 432 124 sends events of type "key";
#X text 431 215 sends events of type "note";
#X text 233 126 name \, global_rcv;
#X text 233 33 name global_rcv [device_ver channel(0: any)], f 24
;
#X obj 43 347 sdPackFromHuman;
#X obj 43 370 s Piano_raw;
#X text 33 300 send notes to piano:;
#X text 244 225 name global_rcv [out_channel(0: any) in_channel(0:
any) startmsg stopmsg], f 27;
#X obj 19 204 sdPiano_obj Piano_raw \$0-GLOBAL 1 1 start stop;
#X msg 43 324 list note ( pitch ( 60 ) volume ( 0.5 ) );
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 13 0 14 0;
#X connect 17 0 6 0;
#X connect 18 0 13 0;
#X restore 33 348 pd simple input based on sdEvents;
#X text 470 14 set "sgDevice" version based on cmd line args:, f 19
;
#X obj 31 92 sgDevice-test;
#X obj 31 16 midiin;
#X obj 31 68 sgDevice2;
#N canvas 0 0 798 854 (subpatch) 0;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#N canvas 0 0 846 418 ->hex 0;
#X obj 37 37 inlet;
#X obj 37 60 expr $f1 >> 4 \; $f1 % 16;
#N canvas 0 0 846 418 ->hex 0;
#X obj 49 23 inlet;
#X obj 51 101 sel 10, f 11;
#X obj 51 138 symbol A;
#X obj 391 386 outlet;
#X obj 110 139 sel 11, f 11;
#X obj 110 162 symbol B;
#X obj 175 163 sel 12, f 11;
#X obj 240 188 sel 13, f 11;
#X obj 306 213 sel 14, f 11;
#X obj 369 236 sel 15, f 11;
#X obj 175 186 symbol C;
#X obj 240 211 symbol D;
#X obj 306 236 symbol E;
#X obj 369 259 symbol F;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 4 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 3 0;
#X connect 6 0 10 0;
#X connect 6 1 7 0;
#X connect 7 0 11 0;
#X connect 7 1 8 0;
#X connect 8 0 12 0;
#X connect 8 1 9 0;
#X connect 9 0 13 0;
#X connect 9 1 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 12 0 3 0;
#X connect 13 0 3 0;
#X restore 118 97 pd ->hex;
#N canvas 0 0 846 418 ->hex 0;
#X obj 49 23 inlet;
#X obj 51 101 sel 10, f 11;
#X obj 51 138 symbol A;
#X obj 391 386 outlet;
#X obj 110 139 sel 11, f 11;
#X obj 110 162 symbol B;
#X obj 175 163 sel 12, f 11;
#X obj 240 188 sel 13, f 11;
#X obj 306 213 sel 14, f 11;
#X obj 369 236 sel 15, f 11;
#X obj 175 186 symbol C;
#X obj 240 211 symbol D;
#X obj 306 236 symbol E;
#X obj 369 259 symbol F;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 4 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 5 0 3 0;
#X connect 6 0 10 0;
#X connect 6 1 7 0;
#X connect 7 0 11 0;
#X connect 7 1 8 0;
#X connect 8 0 12 0;
#X connect 8 1 9 0;
#X connect 9 0 13 0;
#X connect 9 1 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 12 0 3 0;
#X connect 13 0 3 0;
#X restore 38 113 pd ->hex;
#X obj 81 156 list;
#X msg 81 179 symbol \$1\$2;
#X obj 81 202 outlet;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X restore 97 172 pd ->hex;
#X obj 97 219 print -n;
#X obj 97 195 list trim;
#X obj 152 27 inlet;
#X connect 0 0 6 0;
#X connect 1 0 0 1;
#X connect 2 0 5 0;
#X connect 2 1 0 0;
#X connect 4 0 2 0;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 31 40 pd;
#X obj 142 41 r print_midi;
#N canvas 800 0 798 189 control 1;
#X obj 262 615 r \$0-out;
#N canvas 0 0 798 854 out 0;
#X obj 315 49 sdEventToProperties;
#X obj 426 72 sdProperty volume \$0;
#X obj 105 138 vsl 15 64 0 1 0 0 empty empty empty 0 -9 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 62 51 r \$0-volume;
#X obj 315 26 inlet;
#X floatatom 105 210 5 0 0 0 - - - 0;
#X obj 543 95 sdProperty reverb \$0;
#X obj 145 138 vsl 15 64 0 1 0 0 empty empty empty 0 -9 0 10 #fcfcfc
#000000 #000000 0 1;
#X floatatom 145 210 5 0 0 0 - - - 0;
#X obj 145 58 r \$0-reverb;
#X obj 105 117 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 61 26 r \$0-volume_enable;
#X obj 145 117 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 205 83 r \$0-reverb_enable;
#X obj 425 145 sdProperty volume_enable \$0;
#X obj 542 168 sdProperty reverb_enable \$0;
#X connect 0 1 1 0;
#X connect 1 1 6 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 6 1 14 0;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X connect 11 0 10 0;
#X connect 13 0 12 0;
#X connect 14 1 15 0;
#X coords 0 -1 1 1 85 130 1 100 100;
#X restore 262 638 pd out;
#N canvas 0 0 798 854 send 0;
#X text 109 223 you can step through modes using the "meta" triggers
(if there are multiple modes), f 25;
#X text 11 138 the "sgDevice" with "modes";
#X obj 266 156 sdKeyboardModes_ui Keyboard \$0-GLOBAL;
#X floatatom 266 113 5 0 0 0 - - - 0;
#X msg 266 134 list set 3 mode 1 \$1;
#X obj 19 157 sgDeviceModes_ui sgDevice \$0-GLOBAL 1;
#X obj 429 291 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#N canvas 0 0 798 854 modes 0;
#X obj 129 400 sdPackFromHuman;
#X msg 114 303 list play ( #[ ( trigger ( index ( ?index ) ) ) ( Print
( Pack ( play Pack ( pitch $ ( index ) ) ) ) Out ( list ) ) #] ) volume
( #[ ( analog ( * index ( 0 ) value ( ?value ) ) ) ( Print ( Pack (
volume $ ( value ) ) ) Out ( list ) ) #] ) bend ( #[ ( analog ( * index
( 1 ) value ( ?value ) ) ) ( Print ( Pack ( bend $ ( value ) ) ) Out
( list ) ) #] );
#X obj 106 110 t b b;
#X obj 129 423 sdPack modei;
#X obj 266 65 t b b;
#X msg 733 209 clear;
#X obj 129 447 sdSetSelector append;
#X obj 213 598 outlet;
#X obj 70 18 inlet;
#X obj 213 509 sdData;
#X obj 70 41 t b b;
#X obj 65 455 t b;
#X obj 213 555 sdPack set;
#X obj 213 532 sdPack modes;
#X msg 133 132 list out_vol ( #[ ( analog ( * index ( 0 ) value ( ?value
) ) ) ( Print ( Pack ( out_volume $ ( value ) ) ) Out ( list ) ) #]
) out_reverb ( #[ ( analog ( * index ( 1 ) value ( ?value ) ) ) ( Print
( Pack ( out_reverb $ ( value ) ) ) Out ( list ) ) #] ) out_vol_enable
( #[ ( switch ( * index ( 0 ) value ( ?value ) ) ) ( Print ( Pack (
out_volume_enable $ ( value ) ) ) Out ( list ) ) #] ) out_reverb_enable
( #[ ( switch ( * index ( 1 ) value ( ?value ) ) ) ( Print ( Pack (
out_reverb_enable $ ( value ) ) ) Out ( list ) ) #] );
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 2 1 14 0;
#X connect 3 0 6 0;
#X connect 4 0 2 0;
#X connect 4 1 5 0;
#X connect 5 0 9 0;
#X connect 6 0 9 0;
#X connect 8 0 10 0;
#X connect 9 0 13 0;
#X connect 10 0 11 0;
#X connect 10 1 4 0;
#X connect 11 0 9 0;
#X connect 12 0 7 0;
#X connect 13 0 12 0;
#X connect 14 0 0 0;
#X restore 468 330 pd modes;
#X text 319 228 default mode: send control events;
#N canvas 0 0 798 854 modes 0;
#X obj 114 238 sdPackFromHuman;
#X obj 122 377 sdPack modei;
#X obj 247 49 t b b, f 36;
#X msg 616 210 clear;
#X obj 122 401 sdSetSelector append;
#X obj 205 641 outlet;
#X obj 17 10 inlet;
#X obj 205 552 sdData;
#X obj 17 33 t b b;
#X obj 50 375 t b;
#X obj 205 598 sdPack set;
#X obj 205 575 sdPack modes;
#X msg 114 188 list out_vol ( #[ ( key ( * symbol ( \$1 ) value ( 1
) ) ) ( Print ( Pack ( play Pack ( pitch \$2 ) ) ) Out ( list ) ) #]
);
#X obj 114 165 pack s f;
#X msg 114 129 a 0 \, s 2 \, d 4 \, f 5 \, g 7 \, h 9 \, j 11 \, k
12 \, w 1 \, e 3 \, t 6 \, z 8 \, u 10;
#X obj 122 354 sdData;
#X msg 519 225 clear;
#X obj 76 94 t b b b, f 66;
#X obj 81 67 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X connect 0 0 15 1;
#X connect 1 0 4 0;
#X connect 2 0 17 0;
#X connect 2 1 3 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 6 0 8 0;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 8 1 2 0;
#X connect 9 0 7 0;
#X connect 10 0 5 0;
#X connect 11 0 10 0;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 15 0 1 0;
#X connect 16 0 15 0;
#X connect 17 0 15 0;
#X connect 17 1 14 0;
#X connect 17 2 16 0;
#X connect 18 0 17 0;
#X restore 429 377 pd modes;
#X obj 429 400 s Keyboard;
#X text 334 242 you can set other "modes" to send specific events \,
like "output volume" \, "play note" \, ..., f 44;
#X obj 429 311 t b b;
#X text 446 286 set advanced modes;
#X obj 468 354 s sgDevice;
#X text 40 17 in this scenario you can use the "meta" buttons to switch
through several "modes". A mode is a mapping from some input controls
to a message.;
#X obj 64 344 outlet;
#X obj 289 269 t a;
#X connect 2 0 17 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 16 0;
#X connect 6 0 12 0;
#X connect 7 0 14 0;
#X connect 9 0 10 0;
#X connect 12 0 9 0;
#X connect 12 1 7 0;
#X connect 17 0 16 0;
#X restore 21 239 pd send sdEvents with "modes";
#X text 29 330 intermediate step (optional):;
#X text 42 349 redirect events from input devices to instruments or
other objects, f 27;
#N canvas 0 0 798 854 events 0;
#X obj 50 34 inlet;
#X obj 90 279 outlet;
#X obj 139 98 loadbang;
#X obj 119 153 sdPackMatch volume;
#N canvas 0 0 798 854 <event> 0;
#X obj 89 384 sdReplace \$0;
#X obj 89 29 inlet;
#X obj 89 407 outlet;
#X msg 89 63 clear \, add_script play_to_instr ( play ( args=[ * =]
) ) ( Print ( Pack ( %0-instr Pack ( start $ ( args ) Pack ( volume
$ ( volume ) ) ) ) ) Out ( list ) ) \, add_script vol_to_instr ( volume
( ?vol ) ) ( = ( volume $ ( vol ) ) ) \, add_script out_vol ( out_volume
( any=[ * =] ) ) ( Print ( Pack ( %0-out Pack ( set_vol Pack ( volume
$ ( any ) ) ) ) ) Out ( list ) ) ) \, add_script out_rev ( out_reverb
( any=[ * =] ) ) ( Print ( Pack ( %0-out Pack ( set_rev Pack ( reverb
$ ( any ) ) ) ) ) Out ( list ) ) ) \, add_script out_vol_enable ( out_volume_enable
( any=[ * =] ) ) ( Print ( Pack ( %0-out Pack ( set_vol_enable Pack
( volume_enable $ ( any ) ) ) ) ) Out ( list ) ) ) \, add_script out_reverb_enable
( out_reverb_enable ( any=[ * =] ) ) ( Print ( Pack ( %0-out Pack (
set_reverb_enable Pack ( reverb_enable $ ( any ) ) ) ) ) Out ( list
) ) );
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 3 0 0 0;
#X restore 139 121 pd <event> -> <dest> ( <event> );
#X obj 197 100 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X text 351 120 <- the mapping is defined here;
#X text 238 155 <- global var to remember current "volume" for the
instrument;
#X connect 0 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X restore 21 405 pd events -> instrument;
#X obj 21 513 sdUnPack;
#X obj 21 537 send;
#X obj 22 634 sdObjExample \$0-instr \$0-GLOBAL gInstr;
#N canvas 0 0 798 854 generic 1;
#X obj 330 63 sgDevice_obj sgDev_raw \$0-GLOBAL 1;
#X obj 513 273 s GUI;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 574 270 pd;
#X obj 513 226 sgDeviceToInterface;
#X obj 624 203 r \$0-fromGUI;
#X msg 681 74 list init 0;
#X obj 681 97 s \$0-GUI-INIT;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 330 112 pd;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 330 417 pd;
#N canvas 0 0 798 854 to-objects 0;
#X obj 75 166 sdPackMatch;
#X obj 155 119 sdReplace \$0;
#X msg 155 80 clear \, add_script out ( out ( args=[ * =] ) ) ( Print
( Pack ( %0-out Pack ( set $ ( args ) ) ) ) Out ( list ) );
#X obj 155 57 loadbang;
#X obj 31 68 inlet;
#X obj 75 189 outlet;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X restore 330 446 pd to-objects;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 330 470 pd;
#X obj 330 497 sdUnPack;
#X obj 330 520 send;
#N canvas 0 0 798 854 reserved-input 0;
#X obj 76 168 sdPackMatch;
#X obj 128 21 loadbang;
#X obj 76 191 outlet;
#X obj 8 17 inlet;
#X obj 143 193 outlet;
#X msg 128 44 clear \, add out analog ( * value ( ?volume ) index (
0 ) ) \, add out analog ( * value ( ?reverb ) index ( 1 ) ) \, add_script
out-enable ( switch ( * value ( ?value ) index ( 0 ) ) ) ( Print (
Pack ( out Pack ( volume_enable != ( 0 $ ( value ) ) ) ) ) Out ( list
) ) \, add_script reverb-enable ( switch ( * value ( ?value ) index
( 1 ) ) ) ( Print ( Pack ( out Pack ( reverb_enable != ( 0 $ ( value
) ) ) ) ) Out ( list ) );
#X connect 0 0 2 0;
#X connect 0 1 4 0;
#X connect 1 0 5 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X restore 330 263 pd reserved-input;
#X text 634 227 <-- control interface/gui by sgDevice;
#X text 454 141 <- catch some controls and connect them statically
;
#N canvas 0 0 798 854 filter_analog 0;
#X obj 55 70 sdPackFilter analog, f 50;
#X obj 65 150 outlet;
#X obj 57 30 inlet;
#X obj 363 153 outlet;
#X obj 55 94 sdEvent_filterByIndex 7 1;
#X obj 138 118 sdEvent_filterByIndex 14 1 1;
#X connect 0 0 4 0;
#X connect 0 1 3 0;
#X connect 2 0 0 0;
#X connect 4 0 1 0;
#X connect 4 1 5 0;
#X connect 5 0 1 0;
#X connect 5 1 3 0;
#X restore 330 144 pd filter_analog;
#N canvas 0 30 681 503 filter_switch 0;
#X obj 65 150 outlet;
#X obj 57 30 inlet;
#X obj 363 153 outlet;
#X obj 55 70 sdPackFilter switch, f 50;
#X obj 55 94 sdEvent_filterByIndex 14 1;
#X obj 118 122 sdEvent_filterByIndex 14 1 1;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 2 0;
#X connect 4 0 0 0;
#X connect 4 1 5 0;
#X connect 5 0 0 0;
#X connect 5 1 2 0;
#X restore 423 168 pd filter_switch;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 330 234 pd;
#N canvas 0 0 798 854 (subpatch) 0;
#X obj 37 37 inlet;
#X obj 42 155 sdGate;
#X obj 110 202 sdGate;
#X obj 40 202 outlet;
#X obj 110 225 print events;
#X obj 104 120 tgl 15 0 empty empty enable 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 104 140 tgl 15 0 empty empty print 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 37 60 t a a;
#X connect 0 0 7 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 5 0 1 1;
#X connect 6 0 2 1;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X coords 0 -1 1 1 85 60 1 100 100;
#X restore 330 341 pd;
#X text 436 334 simply connect analog 7 and 15 directly \, bypassing
the GUI, f 30;
#X obj 14 648 s \$0-fromGUI;
#X obj 14 12 sdGui_ui GUI \$0-GUI-INIT gInstr;
#X obj 330 86 sdGate 0;
#X obj 387 86 r \$0-enable-gui;
#X obj 641 122 s \$0-enable-gui;
#X obj 523 9 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000
0 1;
#X obj 652 50 t f b;
#X text 542 8 <-- 1 click here to enable;
#X connect 0 0 23 0;
#X connect 3 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 7 0 16 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 2 12 1;
#X connect 13 0 19 0;
#X connect 16 0 18 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 17 1 3 0;
#X connect 18 0 13 0;
#X connect 19 0 8 0;
#X connect 22 0 21 0;
#X connect 23 0 7 0;
#X connect 24 0 23 1;
#X connect 26 0 27 0;
#X connect 27 0 25 0;
#X connect 27 1 5 0;
#X restore 248 238 pd generic gui + sgDevice 2;
#X obj 22 704 sdObjExample \$0-instr2 \$0-GLOBAL gInstr;
#X obj 22 774 sdObjExample \$0-instr3 \$0-GLOBAL gInstr;
#N canvas 0 0 798 854 (subpatch) 0;
#X obj 37 37 inlet;
#X obj 42 155 sdGate;
#X obj 110 202 sdGate;
#X obj 40 202 outlet;
#X obj 110 225 print events;
#X obj 104 120 tgl 15 0 empty empty enable 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 104 140 tgl 15 0 empty empty print 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 37 60 t a a;
#X connect 0 0 7 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 5 0 1 1;
#X connect 6 0 2 1;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X coords 0 -1 1 1 85 60 1 100 100;
#X restore 21 262 pd;
#X text 13 103 1 Simple way;
#X text 10 10 Controlling Objects from User Input;
#X text 286 119 (latest developements);
#X text 237 105 2 Advanced way: Generic GUI;
#N canvas 0 30 762 722 (subpatch) 0;
#X obj 67 163 print;
#X obj 67 139 sdGate;
#X obj 121 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 40 114 t a a;
#X text 136 101 print msgs;
#X obj 35 38 inlet;
#X obj 40 187 outlet;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 6 0;
#X connect 3 1 1 0;
#X connect 5 0 3 0;
#X coords 0 -1 1 1 100 22 1 100 100;
#X restore 21 431 pd;
#X text 246 164 To test this: uncheck "enable on the left side first
\, to prevent interference. Open patch..., f 29;
#X connect 0 0 1 0;
#X connect 2 0 12 0;
#X connect 5 0 17 0;
#X connect 6 0 7 0;
#X connect 6 2 7 1;
#X connect 12 0 5 0;
#X connect 17 0 6 0;
#X restore 33 398 pd control objects from input;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 3 0 5 0;
#X connect 6 0 3 0;
#X connect 10 0 12 0;
#X connect 11 0 9 0;
#X connect 12 0 11 0;
#X connect 13 0 12 1;
